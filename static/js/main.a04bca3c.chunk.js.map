{"version":3,"sources":["assets/logo.png","components/AddItem/AddItem2.js","components/LabelSelect/LabelSelect.js","components/HomePage/HomePage.js","components/Header/Header.js","App.js","index.js"],"names":["module","exports","AddItem2","props","titleHandler","e","target","value","length","setState","style","border","isSubmit","title","textHandler","t","text","sendItemHandler","preventDefault","getItem","state","date","Date","className","background","Form","onSubmit","this","autoComplete","Group","as","Row","controlId","Label","column","sm","titleLabel","Col","Control","name","type","placeholder","onChange","textareaLabel","rows","placeholderText","selected","dateFormat","isClearable","span","offset","Button","disabled","btnText","Component","options","key","LabelSelect","Menu","Item","Dropdown","fluid","multiple","selection","HomePage","itemReceiverHandler","event","itemList","items","addDate","dateP","split","utcDate","UTC","push","textarea","isChecked","titleChangeHandler","i","titleChange","checkboxHandler","checked","Accordion","map","item","index","setBackColor","getDate","getMonth","getYear","getTime","now","Card","Header","Checkbox","inputProps","Toggle","fontSize","color","variant","eventKey","inverted","animated","floated","onClick","splice","Content","hidden","visible","Icon","Collapse","Body","Input","icon","iconPosition","itemChangeDate","openToDate","TextArea","changeText","src","Navbar","Brand","href","width","height","alt","App","logo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a04bca3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.bb1c10d6.png\";","import React, { Component } from 'react'\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-datepicker/dist/react-datepicker-cssmodules.min.css';\nimport './AddItem.css'\n\n\nclass AddItem2 extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            date: new Date(),\n            text: '' ,\n            isSubmit: true,\n            style: null\n        }\n    }\n\n    titleHandler = (e) => {\n        \n        e.target.value.length > 30 ?\n        this.setState({\n            style:{ border: '1px solid red'},\n            isSubmit: false\n        })\n        :\n        this.setState({\n            title: e.target.value,\n            isSubmit: true,\n            style: null\n        })\n    }\n\n    textHandler = (t) => {\n        this.setState({\n            text: t.target.value\n        })\n    }\n    \n    sendItemHandler = (e) => {\n        e.preventDefault();\n        this.props.getItem(e);\n    }\n\n    render() {\n        return (\n            <div className=\"container border-black shadow mt-3\" style={{background: '#ededed'}}>\n                <Form className=\"p-5\" onSubmit={ this.sendItemHandler } autoComplete=\"off\">\n                    <Form.Group as={Row} controlId=\"formHorizontalTitle\">\n                        <Form.Label column sm={2}>\n                            {this.props.titleLabel}\n                        </Form.Label>\n\n                        <Col sm={10}>\n                            <Form.Control style={ this.state.style } name='title' value={this.state.value} type=\"Text\" placeholder=\"Title\" onChange={this.titleHandler}/>\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label column sm={2} >{this.props.textareaLabel}</Form.Label>\n                    <Col sm={10}>\n                    <Form.Control name='textarea' as=\"textarea\" rows=\"3\" onChange={this.textHandler}/>\n                    </Col>\n                    </Form.Group>\n                \n                    <Form.Group as={Row} controlId=\"formHorizontalDate\">\n                        <Form.Label column sm={2}>\n                            Date\n                        </Form.Label>\n                        <Col sm={4}>\n                            <DatePicker\n                                placeholderText=\"Select a date\"\n                                className=\"cardPick pl-4 border border-0 w-100 bg-light\"\n                                name='dateP'\n                                selected={ this.state.date }\n                                onChange={ date => this.setState({ date: date }) }\n                                dateFormat= 'dd.MM.yyyy'\n                                isClearable\n                            />\n                        </Col>\n                    </Form.Group>\n               \n                    <Form.Group as={Row}>\n                        <Col sm={{ span: 10, offset: 0 }}>\n                            <Button className=\"bg-primary\" type=\"submit\" disabled={ !this.state.isSubmit }>{this.props.btnText}</Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default AddItem2\n","import React from 'react'\nimport { Dropdown, Menu } from 'semantic-ui-react';\nimport './LabellSelect.css'\n\n\n\nconst options = [\n    { key: 'family', text: '👨‍👨‍👧‍👦 Family', value: 'family' },\n    { key: 'work', text: '👩‍💻 Work', value: 'work' },\n    { key: 'school', text: '👨‍🎓 School', value: 'school' },\n    { key: 'emergency', text: '🚨 Emergency', value: 'emergency' },\n    { key: 'important', text: '⚠️ Important', value: 'important' },\n    { key: 'not important', text: '😴 not Important', value: 'not important' },\n    { key: 'not emergency', text: '⌛️ not Emergency', value: 'not emergency' },\n\n]\n\nfunction LabelSelect() {     \n    return (\n        <Menu className=\"my-1\">\n            <Menu.Item className=\"bg-success\">Status</Menu.Item>\n            <Dropdown className=\"border-0\" placeholder='Select Status' fluid multiple selection options={options} />\n        </Menu>\n        \n        \n        \n        \n    )\n}\n\nexport default LabelSelect;\n","import React, { Component } from 'react';\nimport AddItem2 from '../AddItem/AddItem2';\nimport { Accordion, Card } from 'react-bootstrap';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-datepicker/dist/react-datepicker-cssmodules.min.css';\nimport DatePicker from 'react-datepicker';\nimport { Checkbox } from '@material-ui/core/';\nimport LabelSelect from '../LabelSelect/LabelSelect';\nimport { Button, Icon, Form, TextArea, Input } from 'semantic-ui-react'\nimport './Home.css';\n\n\nclass HomePage extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            items: []\n        }\n    }\n\n    itemReceiverHandler = (event) => {             \n        \n        let itemList = [ ...this.state.items ];\n        let addDate = event.target.dateP.value;\n\n        if (addDate) {\n            const date = addDate.split('.')\n            const utcDate = new Date(Date.UTC(date[2], date[1] - 1, date[0]));\n\n            itemList.push({\n                title: event.target.title.value,\n                date: utcDate,\n                text: event.target.textarea.value,\n                isChecked: false\n            })\n    \n            this.setState({\n                items: itemList\n            })\n\n        } else {\n            itemList.push({\n                title: event.target.title.value,\n                date: null,\n                text: event.target.textarea.value,\n                isChecked: false\n            })\n    \n            this.setState({\n                items: itemList\n            })\n        }\n    }\n\n    titleChangeHandler = (e,i) => {\n\n        const titleChange = { ...this.state.items[i]};\n        titleChange.title = e.target.value;\n        const items = this.state.items;\n        items[i] = titleChange;\n\n        this.setState({\n            items: items\n        })\n\n    }\n\n    checkboxHandler = (e,i) => {\n\n        const itemList = { ...this.state.items[i]};\n        itemList.isChecked = e.target.checked;\n        const items = this.state.items;\n        items[i].isChecked = itemList.isChecked;\n\n        this.setState({\n            isChecked: items.isChecked\n        })\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"px-1\">\n\n                    <AddItem2\n                        getItem={ this.itemReceiverHandler }\n                        titleLabel='Title'\n                        textareaLabel='Memo'\n                        btnText='Save'\n                    />\n\n                    <Accordion  className=\"p-5 w-75 m-auto\">\n                    {\n                        this.state.items.map ( ( item, index ) => {\n\n                            let setBackColor = '#f0efef';\n                            \n                            item.date === null ? setBackColor = '#f0efef'\n                             :\n                            item.date.getDate() === new Date().getDate() &&\n                                item.date.getMonth() === new Date().getMonth() &&\n                                    item.date.getYear() === new Date().getYear() ? setBackColor = '#fff591'\n                             :                                  \n                            item.date.getDate() === new Date().getDate() - 1 &&\n                                item.date.getMonth() === new Date().getMonth() &&\n                                        item.date.getYear() === new Date().getYear() ? setBackColor = '#fff591'\n                             :\n                            item.date.getTime() < Date.now() ? setBackColor = '#62d2a2'\n                             :\n                            item.date.getTime() > Date.now() ? setBackColor = '#f8b195'\n                             : setBackColor = '#f0efef'\n            \n\n                            if (item.isChecked === true) {\n                                setBackColor = '#79bac1'\n                            }\n\n                            return(\n                                \n                                <Card key={index} style={{ background: setBackColor }} className=\"mb-2\">\n                                    <Card.Header>\n                                        <Checkbox\n                                            onChange={ (e) => this.checkboxHandler( e,index ) }\n                                            checked={ item.isChecked }         \n                                            inputProps={{ 'aria-label': 'primary checkbox' }}\n                                        />\n                                    \n                                        <Accordion.Toggle className=\"mx-2 bg-primary\" style={{fontSize: '12px', color: 'white'}} as={Button} variant=\"link\" eventKey={index}>\n                                            View\n                                        </Accordion.Toggle>\n\n                                        <span className=\"mx-2 px-2\" style={{fontSize: '18px'}}>{ item.title }</span>\n                            \n                                        <Button\n                                            inverted color='red'\n                                            animated='vertical'\n                                            floated='right'\n                                            onClick={ () => {\n                                                                let itemList = [ ...this.state.items ];\n                                                                itemList.splice(index, 1);\n                                                                this.setState({\n                                                                    items: itemList\n                                                                })\n                                                            }\n                                                    }\n                                        >\n\n                                            <Button.Content hidden>Delete</Button.Content>\n                                            <Button.Content visible>\n                                                <Icon name='delete' />\n                                            </Button.Content>\n                                        </Button>\n\n                                    </Card.Header>\n                                    <Accordion.Collapse eventKey={index}>\n                                        <Card.Body>\n\n                                            <LabelSelect />\n                                            \n                                            <Input\n                                                \n                                                value={ item.title }\n                                                className=\"mb-1\" \n                                                fluid icon='text width' \n                                                iconPosition='left' \n                                                placeholder='Search users...'                                            \n                                                onChange={ (e) => e.target.value.length < 30 ? this.titleChangeHandler(e,index) : null } \n                                            />\n                                        \n                                            <DatePicker\n                                                placeholderText=\"Select a date\"\n                                                className=\"pl-4 border w-100\"                                         \n                                                selected={ item.date }                  \n                                                onChange =  { \n                                                                date => {                                                   \n                                                                            const itemChangeDate = [ ...this.state.items ];\n                                                                            itemChangeDate[index].date = date;\n                                                                            this.setState({\n                                                                                items: itemChangeDate\n                                                                            })\n                                                                        } \n                                                            }\n                                                dateFormat= 'dd.MM.yyyy'\n                                                openToDate={ this.state.items[index].date }\n                                                isClearable\n                                            />\n\n                                            <Form>\n                                                \n                                                <TextArea                                             \n                                                    className=\"mt-2 mb-1\"\n                                                    value={ item.text }\n                                                    rows={3}\n                                                    onChange =  { t  => {\n                                                                            let changeText = [ ...this.state.items ];\n                                                                            changeText[index].text = t.target.value;\n                                                                            this.setState({\n                                                                                text: changeText\n                                                                            })\n\n                                                                        }  \n                                                                }\n                                                />  \n                                            </Form>\n                                                                    \n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                            )\n                        \n                        })\n                    }\n                    </Accordion>\n                    \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default HomePage;\n","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\n\nfunction Header({src}) {\n    return (\n        \n        <Navbar style={{background: '#35495e'}} variant=\"dark\" className=\"container\">\n            <Navbar.Brand href=\"#home\">\n                <img\n                    src={ src }\n                    width=\"30\"\n                    height=\"30\"\n                    className=\"d-inline-block align-top mx-2\"\n                    alt=\"React Bootstrap logo\"\n                />{'  '}\n                React_To Do List App\n            </Navbar.Brand>\n        </Navbar>\n        \n    )\n}\n\n\nexport default Header\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport HomePage from './components/HomePage/HomePage';\nimport Header from './components/Header/Header';\nimport logo from './assets/logo.png'\n\nfunction App() {\n  return (\n    <div>\n      <Header  src={ logo }/>\n      <HomePage />\n    </div>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}